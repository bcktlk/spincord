name: Spincord CI/CD

on:
  push:
    branches:
      - main

jobs:
  # lint typescript and enforce style
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install

      - name: Lint source code
        run: yarn lint

  # run all unit tests
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install

      - name: Run unit tests
        run: yarn test

  # check if typescript source compiles successfully without errors
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

  # Deploy spincord to digital ocean droplet
  deploy:
    needs: [lint, test, build]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Start deployment
      uses: bobheadxi/deployments@v1
      id: deployment
      with:
        step: start
        token: ${{ secrets.GITHUB_TOKEN }}
        env: release

    - name: Install dependencies
      run: yarn install

    - name: Build production javascipt
      env:
        PRODUCTION_DOTENV: ${{ secrets.PRODUCTION_DOTENV }}
      run: |
        yarn build
        echo "${PRODUCTION_DOTENV}" > "dist/.env"


    - name: Register slash commands
      run: cd dist; node utils/deploy_commands; cd ..

    - name: SSH deploy
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SOURCE: "dist/"
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        TARGET: ${{ secrets.REMOTE_TARGET }}

    - name: Set up and restart production server
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: pm2 restart spincord/app.js --update-env || pm2 start spincord/app.js --update-env
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        privateKey: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Update deployment status
      uses: bobheadxi/deployments@v1
      if: always()
      with:
        step: finish
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ job.status }}
        env: ${{ steps.deployment.outputs.env }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
